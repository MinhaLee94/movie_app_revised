{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","Text","props","color","Error","propTypes","text","PropTypes","string","isRequired","Message","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","role","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","length","map","movie","original_title","poster_path","vote_average","release_date","substring","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","Header","header","List","ul","li","current","StyledLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a93684f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"596592b27ece1565dc14875d885e7900\",\r\n    language: \"en-US\"\r\n  }\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: id => api.get(`movie/${id}`, {\r\n    params: {\r\n      append_to_response: \"videos\"\r\n    }\r\n  }),\r\n  search: (term) => api.get(\"search/movie\", {\r\n    params: {\r\n      query: encodeURIComponent(term)\r\n    }\r\n  })\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) => api.get(`tv/${id}`, {\r\n    params: {\r\n      append_to_response: \"videos\"\r\n    }\r\n  }),\r\n  search: (term) => api.get(\"search/tv\", {\r\n    params: {\r\n      query: encodeURIComponent(term)\r\n    }\r\n  })\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 18px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => <Container>Loading...</Container>","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};  \r\n  font-weight: 600;\r\n`;\r\n\r\nconst Message = ({text, color}) => \r\n  <Container>\r\n    <Text color={color}>\r\n      {text}\r\n    </Text>\r\n  </Container>\r\n\r\nError.propTypes = {\r\n  text: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity .1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/noPosterSmall.png\").default} />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>{title}</Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n)\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({nowPlaying, popular, upcoming, loading, error}) => \r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Movie app</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader /> \r\n    ) : (\r\n      <Container>\r\n      {nowPlaying && nowPlaying.length > 0 && (\r\n        <Section title=\"Now Playing\">\r\n          {nowPlaying.map(movie => (\r\n            <Poster \r\n              key={movie.id} \r\n              id={movie.id}\r\n              title={movie.original_title} \r\n              imageUrl={movie.poster_path} \r\n              rating={movie.vote_average}\r\n              isMovie={true}\r\n              year={movie.release_date?.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {upcoming && upcoming.length > 0 && (\r\n        <Section title=\"Upcoming Movies\">\r\n          {upcoming.map(movie => (\r\n            <Poster \r\n              key={movie.id} \r\n              id={movie.id}\r\n              title={movie.original_title} \r\n              imageUrl={movie.poster_path} \r\n              rating={movie.vote_average}\r\n              isMovie={true}\r\n              year={movie.release_date?.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Movies\">\r\n          {popular.map(movie => (\r\n            <Poster \r\n              key={movie.id} \r\n              id={movie.id}\r\n              title={movie.original_title} \r\n              imageUrl={movie.poster_path} \r\n              rating={movie.vote_average}\r\n              isMovie={true}\r\n              year={movie.release_date?.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message text={error} color=\"#e74c3c\" />}\r\n    </Container>\r\n  )}\r\n</>;\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport { moviesApi } from \"../../api\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming }\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular }\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movie information.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) => \r\n  <>\r\n    <Helmet>\r\n      <title>TV | Movie app</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader /> \r\n    ) : (\r\n    <Container>\r\n      {topRated && topRated.length > 0 && (\r\n        <Section title=\"Top Rated Shows\">\r\n          {topRated.map(show => \r\n            <Poster \r\n              key={show.id} \r\n              id={show.id}\r\n              title={show.original_name} \r\n              imageUrl={show.poster_path} \r\n              rating={show.vote_average}\r\n              year={show.first_air_date?.substring(0, 4)}\r\n            />\r\n          )}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Shows\">\r\n          {popular.map(show => \r\n            <Poster \r\n              key={show.id} \r\n              id={show.id}\r\n              title={show.original_name} \r\n              imageUrl={show.poster_path} \r\n              rating={show.vote_average}\r\n              year={show.first_air_date?.substring(0, 4)}\r\n            />\r\n          )}\r\n        </Section>\r\n      )}\r\n      {airingToday && airingToday.length > 0 && (\r\n        <Section title=\"Airing Today\">\r\n          {airingToday.map(show => \r\n            <Poster \r\n              key={show.id} \r\n              id={show.id}\r\n              title={show.original_name} \r\n              imageUrl={show.poster_path} \r\n              rating={show.vote_average}\r\n              year={show.first_air_date?.substring(0, 4)}\r\n            />\r\n          )}\r\n        </Section>\r\n      )}\r\n      {error && <Message text={error} color=\"#e74c3c\" />}\r\n    </Container>\r\n  )}\r\n</>;\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component{\r\n  state={\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true\r\n  }\r\n  \r\n  async componentDidMount() {\r\n    try {\r\n      const { \r\n        data: { results: topRated }\r\n      } = await tvApi.topRated();\r\n      const { \r\n        data: { results: popular }\r\n      } = await tvApi.popular();\r\n      const { \r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({ error: \"Can't find TV information\" });\r\n    } finally {\r\n      this.setState({ loading: false });      \r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all:unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({movieResults, tvResults, loading, error, searchTerm, handleSubmit, updateTerm}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Movie app</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input placeholder=\"Search Moives or TV Shows\" value={searchTerm} onChange={updateTerm} />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : ( \r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => ( \r\n              <Poster \r\n                key={movie.id} \r\n                id={movie.id}\r\n                title={movie.original_title} \r\n                imageUrl={movie.poster_path} \r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date?.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Shows Results\">\r\n            {tvResults.map(show => ( \r\n              <Poster \r\n                key={show.id} \r\n                id={show.id}\r\n                title={show.original_name} \r\n                imageUrl={show.poster_path} \r\n                rating={show.vote_average}\r\n                year={show.first_air_date?.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n        {tvResults && \r\n          movieResults && \r\n          tvResults.length === 0 && \r\n          movieResults.length === 0 && (\r\n            <Message text=\"Nothing Found\" color=\"#95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport { moviesApi, tvApi} from \"../../api\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component{\r\n  state={\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm()\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const { \r\n      target: { value }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async() => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const { data: \r\n        { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const { data: \r\n        { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({ \r\n        movieResults, \r\n        tvResults, \r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, loading, handleSubmit } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  height: calc(100vh - 50px);\r\n  width:100%;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error}) => (\r\n  loading ? (\r\n    <>\r\n    <Helmet>\r\n      <title>Loading | Movie app</title>\r\n    </Helmet>\r\n    <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n      <title>{result.original_title ? result.original_title : result.original_name} | Movie app</title>\r\n      </Helmet>\r\n      <Backdrop \r\n        bgImage={`https://image.tmdb.org/t/p/original/${result.backdrop_path}`} />\r\n      <Content>\r\n        <Cover \r\n          bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original/${result.poster_path}` : require(\"../../assets/noPosterSmall.png\")} />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  )\r\n)\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state={\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n  \r\n  async componentDidMount() {\r\n    const { \r\n      match: { \r\n        params: { id }\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return (\r\n      <DetailPresenter\r\n        result={result}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px; \r\n  text-align: center;\r\n  border-bottom: 3px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\r\n  transition: border-bottom .3s ease-in-out;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname }}) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <StyledLink to=\"/\">Movies</StyledLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <StyledLink to=\"/tv\">TV</StyledLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <StyledLink to=\"/search\">Search</StyledLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Home from \"../Routes/Home\"\r\nimport TV from \"../Routes/TV\";\r\nimport Search from \"../Routes/Search\";\r\nimport Detail from \"../Routes/Detail\";\r\nimport Header from \"./Header\";\r\n\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  ${reset};\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size: 12px;\r\n    background-color: rgba(20, 20, 20, 1);\r\n    color: white;\r\n    padding-top: 50px; \r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;","import React, { Component } from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}